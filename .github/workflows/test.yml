name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-suite:
    runs-on: ubuntu-latest

    services:
      postgres:
        if: ${{ '{{ cookiecutter.use_postgres }}' == 'yes' }}
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '{{ cookiecutter.python_version }}'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/dev.in') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
          pip-compile requirements/dev.in
          pip install -r requirements/dev.txt

      - name: Configure database for SQLite (if Postgres is disabled)
        if: ${{ '{{ cookiecutter.use_postgres }}' == 'no' }}
        run: |
          echo "DATABASE_URL=sqlite:///db.sqlite3" >> $GITHUB_ENV

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests with coverage
        run: pytest --cov=apps --cov-report=term-missing --cov-report=xml
